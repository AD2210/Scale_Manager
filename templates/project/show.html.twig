{% extends 'base.html.twig' %}

{% block title %}Détail - {{ project.title }} - {{ project.customer.name }}{% endblock %}

{% block page_header %}
    <div class="d-flex justify-content-between align-items-center">
        <h1 class="h4 mb-0 pe-3">Détail - {{ project.title }} - {{ project.customer.name }}</h1>
        <div class="d-flex align-items-center gap-3">
            <a href="{{ path('app_project_edit', { id: project.id }) }}"
               class="btn btn-sm btn-outline-primary">Modifier</a>
            <a href="{{ path('app_gamme_project_file', { id: project.id }) }}"
               class="btn btn-sm btn-outline-warning"
               id="gammeButton"
               data-project-id="{{ project.id }}">Gamme</a>
            <a href="{{ path('app_project_archive', { id: project.id }) }}" class="btn btn-sm btn-outline-secondary">
                {{ project.isArchived ? 'Désarchiver' : 'Archiver' }}
            </a>
            <input type="date"
                   class="form-control form-control-sm"
                   id="deadlineInput"
                   value="{{ project.deadline ? project.deadline|date('Y-m-d') : '' }}"
                   data-id="{{ project.id }}">
        </div>
        <div class="d-flex align-items-center ps-3 gap-3">
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" id="deleteOrphansCheckbox">
                <label class="form-check-label small" for="deleteOrphansCheckbox">Supprimer les orphelins</label>
            </div>
            <button id="resyncFoldersBtn" class="btn btn-sm btn-outline-secondary" title="Re-synchroniser les dossiers">
                <i class="fa-solid fa-retweet"></i>
            </button>
        </div>
    </div>
{% endblock %}

{% block body %}
    <div class="row g-4">
        {# Créons un macro pour réutiliser le code #}
        {% macro progress_card(title, dataset, link = null) %}
            <div class="card h-100">
                {% if link %}
                    <a href="{{ link }}" class="text-decoration-none text-dark stretched-link"></a>
                {% endif %}
                <div class="card-header">{{ title }}</div>
                <div class="card-body">
                    {% if dataset.error is defined %}
                        <div class="text-danger">{{ dataset.error }}</div>
                    {% else %}
                        {% set done = dataset.done|default(0) %}
                        {% set total = dataset.total|default(0) %}
                        {% set progress = dataset.progress|default(0) %}

                        <div class="text-muted small">{{ done }} / {{ total }} traités</div>
                        <div class="progress mt-2" style="height: 8px;">
                            <div class="progress-bar bg-warning" style="width: {{ progress }}%;"></div>
                        </div>
                    {% endif %}
                </div>
            </div>
        {% endmacro %}

        {# Utilisation de la macro pour les cartes de progression #}
        {% import _self as components %}

        {# Carte devis #}
        <div class="col-md-3">
            <div class="card shadow-sm h-100">
                <div class="card-body position-relative">
                    <h5 class="card-title">Devis</h5>

                    {% if project.quoteLink %}
                        <embed src="{{ path('project_file_download', { id: project.id, type: 'quote' }) }}" width="100%" height="400px" />
                    {% else %}
                        <div class="alert alert-secondary text-center">Aucun fichier actuellement.</div>
                    {% endif %}

                    <div class="mt-3 d-flex gap-2">
                        <a class="btn btn-sm btn-outline-secondary {{ not project.quoteLink ? 'disabled' }}" target="_blank"
                           href="{{ path('project_file_download', { id: project.id, type: 'quote' }) }}">
                            <i class="fa-solid fa-eye"></i>
                        </a>

                        <button class="btn btn-sm btn-outline-primary" onclick="triggerFileUpload('quote')">
                            <i class="fa-solid fa-pen-to-square"></i>
                        </button>

                        <button class="btn btn-sm btn-outline-danger {{ not project.quoteLink ? 'disabled' }}"
                                onclick="deleteProjectFile({{ project.id }}, 'quote')">
                            <i class="fa-solid fa-trash"></i>
                        </button>

                        <input type="file" id="uploadInputQuote" data-id="{{ project.id }}"
                               style="display:none;" onchange="uploadProjectFile(this, 'quote')"/>
                    </div>
                </div>
            </div>
        </div>

        {# Carte spécifications #}
        <div class="col-md-3">
            <div class="card shadow-sm h-100">
                <div class="card-body position-relative">
                    <h5 class="card-title">Cahier de charges</h5>

                    {% if project.specificationLink %}
                        <embed src="{{ path('project_file_download', { id: project.id, type: 'specification' }) }}" width="100%" height="400px" />
                    {% else %}
                        <div class="alert alert-secondary text-center">Aucun fichier actuellement.</div>
                    {% endif %}

                    <div class="mt-3 d-flex gap-2">
                        <a class="btn btn-sm btn-outline-secondary {{ not project.specificationLink ? 'disabled' }}" target="_blank"
                           href="{{ path('project_file_download', { id: project.id, type: 'specification' }) }}">
                            <i class="fa-solid fa-eye"></i>
                        </a>

                        <button class="btn btn-sm btn-outline-primary" onclick="triggerFileUpload('specification')">
                            <i class="fa-solid fa-pen-to-square"></i>
                        </button>

                        <button class="btn btn-sm btn-outline-danger {{ not project.specificationLink ? 'disabled' }}"
                                onclick="deleteProjectFile({{ project.id }}, 'specification')">
                            <i class="fa-solid fa-trash"></i>
                        </button>

                        <input type="file" id="uploadInputSpecification" data-id="{{ project.id }}"
                               style="display:none;" onchange="uploadProjectFile(this, 'specification')"/>
                    </div>
                </div>
            </div>
        </div>

        {# Carte dossier client #}
        <div class="col-md-3">
            <div class="card h-100">
                <a href="{{ path('app_datas_list', {'id': project.id}) }}" class="text-decoration-none text-dark stretched-link"></a>
                <div class="card-header">Données client</div>
                <div class="card-body">
                    <div class="mb-2">
                        <label class="form-label">Lien dossier :</label>
                        <input type="text" class="form-control form-control-sm"
                               id="customerDataLinkInput"
                               data-id="{{ project.id }}"
                               value="{{ project.customerDataLink }}">
                    </div>
                    {% if customerDataDataset.error is defined %}
                        <div class="text-danger">{{ customerDataDataset.error }}</div>
                    {% else %}
                        {% set done = customerDataDataset.done|default(0) %}
                        {% set total = customerDataDataset.total|default(0) %}
                        {% set progress = customerDataDataset.progress|default(0) %}

                        <div class="text-muted small">{{ done }} / {{ total }} traités</div>
                        <div class="progress mt-2" style="height: 8px;">
                            <div class="progress-bar bg-success" style="width: {{ progress }}%;"></div>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>

        {# Carte dossier modèles avec la même approche #}
        <div class="col-md-3">
            <div class="card h-100">
                <a href="{{ path('app_model_list', {'id': project.id}) }}" class="text-decoration-none text-dark stretched-link"></a>
                <div class="card-header">Modèles</div>
                <div class="card-body">
                    <div class="mb-2">
                        <label class="form-label">Lien dossier :</label>
                        <input type="text" class="form-control form-control-sm"
                               id="modelLinkInput"
                               data-id="{{ project.id }}"
                               value="{{ project.modelLink }}">
                    </div>
                    {% if modelDataset.error is defined %}
                        <div class="text-danger">{{ modelDataset.error }}</div>
                    {% else %}
                        {% set done = modelDataset.done|default(0) %}
                        {% set total = modelDataset.total|default(0) %}
                        {% set progress = modelDataset.progress|default(0) %}

                        <div class="text-muted small">{{ done }} / {{ total }} traités</div>
                        <div class="progress mt-2" style="height: 8px;">
                            <div class="progress-bar bg-info" style="width: {{ progress }}%;"></div>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>

        {# Utilisation de la macro pour les autres cartes #}
        <div class="col-md-3">
            {{ components.progress_card('Impression 3D', print3DDataset, path('app_print3d_list', {'id': project.id})) }}
        </div>

        <div class="col-md-3">
            {{ components.progress_card('Post-Traitement', postTreatmentDataset, path('app_treatment_list', {'id': project.id})) }}
        </div>

        <div class="col-md-3">
            {{ components.progress_card('Finition', finishDataSet, path('app_finish_list', {'id': project.id})) }}
        </div>

        <div class="col-md-3">
            {{ components.progress_card('Assemblage', assemblyDataset) }}
        </div>

        <div class="col-md-3">
            {{ components.progress_card('Contrôle qualité', qualityDataset) }}
        </div>

        {# Autres cartes #}
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const gammeButton = document.getElementById('gammeButton');

            // Convertir le lien en button pour un meilleur contrôle
            gammeButton.addEventListener('click', async function(e) {
                e.preventDefault(); // Empêche le comportement par défaut

                const projectId = this.dataset.projectId;
                const targetUrl = this.href;

                try {
                    const response = await fetch(`/api/project/${projectId}/check-models`);
                    const data = await response.json();

                    if (data.success) {
                        // Si des modèles sont disponibles, navigation programmatique
                        window.location.href = targetUrl;
                    } else {
                        // Création et affichage du toast
                        const toastElement = createToast('warning', data.message);
                        const toast = new bootstrap.Toast(toastElement, {
                            delay: 3000 // Le toast restera visible 3 secondes
                        });
                        toast.show();
                    }
                } catch (error) {
                    const toastElement = createToast('error', 'Une erreur est survenue lors de la vérification');
                    const toast = new bootstrap.Toast(toastElement, {
                        delay: 3000
                    });
                    toast.show();
                }

                // La navigation par défaut est toujours empêchée
                return false;
            });

            function createToast(type, message) {
                // Supprimer l'ancien conteneur de toast s'il existe
                const existingContainer = document.querySelector('.toast-container');
                if (existingContainer) {
                    existingContainer.remove();
                }

                const toastContainer = document.createElement('div');
                toastContainer.className = 'toast-container position-fixed top-0 end-0 p-3';

                const toastElement = document.createElement('div');
                toastElement.className = `toast align-items-center text-black bg-${type === 'warning' ? 'warning' : 'danger'} border-0`;
                toastElement.setAttribute('role', 'alert');
                toastElement.setAttribute('aria-live', 'assertive');
                toastElement.setAttribute('aria-atomic', 'true');

                toastElement.innerHTML = `
                    <div class="d-flex">
                        <div class="toast-body">
                            ${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                `;

                toastContainer.appendChild(toastElement);
                document.body.appendChild(toastContainer);

                return toastElement;
            }
        });
    </script>
{% endblock %}
